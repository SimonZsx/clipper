FROM tensorflow/tensorflow:1.12.0-gpu-py3

# docker run --runtime=nvidia -p 10000:10000 -it sentiment_main:raft 

#c1
RUN apt-get update
RUN apt-get install wget zip unzip python3-pip -y

RUN pip3 install SpeechRecognition
RUN apt-get install -y swig libpulse-dev libasound2-dev
RUN pip3 install pocketsphinx

RUN pip3 install grpcio
RUN pip3 install protobuf

# for downloading and renameing dataset3
RUN apt-get install curl -y
RUN apt-get install ffmpeg -y

# for pydub in truncate.py
RUN pip3 install pydub
RUN apt-get install ffmpeg libavcodec-extra -y

# for listing files in truncate.py
RUN pip3 install glob3

# container/container1 will have app, data
ADD container1 /container/container1

# dataset3
# download reference: https://www.kaggle.com/general/6604
# dataset refernce: https://www.kaggle.com/rtatman/speech-accent-archive/
RUN chmod 777 /container/container1/data/dataset3/downloadDataset.sh
RUN /container/container1/data/dataset3/downloadDataset.sh
RUN mv $(find / -name speech-accent-archive.zip) /container/container1/data/dataset3
RUN unzip /container/container1/data/dataset3/speech-accent-archive.zip -d /container/container1/data/dataset3
# /container/data/dataset3 now contains:reading-passage.txt, recordings.zip, speakers_all.csv
RUN unzip -qq /container/container1/data/dataset3/recordings.zip -d /container/container1/data/dataset3/
RUN chmod 777 /container/container1/data/dataset3/rename.sh
RUN /container/container1/data/dataset3/rename.sh
RUN python3 /container/container1/data/dataset3/truncate.py


#c2
RUN pip3 install spacy 
RUN python3 -m spacy download en_core_web_sm
ADD container2 /container/container2

#c3
RUN pip3 install nltk
RUN python3 -m spacy download en
ADD container3 /container/container3

#c4
ADD container4 /container/container4

# for RAFT !!!!! IMPORTANT!!!!!!
RUN pip3 install pyyaml

RUN apt-get install git -y

RUN pip3 install git+https://github.com/ucbrise/clipper.git@develop#subdirectory=clipper_admin


RUN apt-get update -qq \
      && apt-get install -y -qq libzmq5 libzmq5-dev redis-server libsodium18 build-essential

ENV PIP_DEFAULT_TIMEOUT=100
RUN pip3 install --upgrade pip

RUN pip3 install -q cloudpickle==0.5.* pyzmq==17.0.* prometheus_client==0.1.* \
    pyyaml>=4.2b1 jsonschema==2.6.* redis==2.10.* psutil==5.4.* flask==0.12.2 

ADD closure.py /container
ADD rpc.py /container
ADD metrics_config.yaml /container
ADD main.py /container

# /container nows contains: 
# c0_entryContainer c1_speechRecognition/ c2_imageCaptionGenerator/ c3_nlpMappingGenerator/ c4_questionAnswering/ main.py

# Crucial
WORKDIR /container

# CMD ["python3", "/container/closure.py"]
CMD ["python3", "/container/main.py"]

EXPOSE 10000
